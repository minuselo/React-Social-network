{"version":3,"sources":["components/Dialogs/DialogItem/ContactItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Dialogs/Dialogs.module.css","components/HOC/withAuthorizedRedirect.js"],"names":["ContactItem","props","className","s","contactItem","contactImg","to","contactId","name","Message","massage","messageAuthor","messageText","validate","e","MessageForm","onSubmit","addNewMessage","render","handleSubmit","sendField","component","cols","rows","type","Dialogs","isAutorized","UsersElements","stateDialogs","Users","map","el","id","MessagesElements","Messages","message","author","dialogs","contacts","massages","massageField","addMessage","newMessageText","compose","connect","state","messagesPage","NewMessageText","auth","isAuth","dispatch","AddMessageActionCreator","withAuthorizedRedirect","module","exports","mapStateToProps","Component","RedirectComponent","this","React"],"mappings":"gKAeeA,EAXK,SAACC,GACjB,OACI,sBAAKC,UAAWC,IAAEC,YAAlB,UACI,qBAAKF,UAAWC,IAAEE,aAClB,cAAC,IAAD,CAASC,GAAI,YAAcL,EAAMM,UAAjC,SAA6CN,EAAMO,WCShDC,EAXC,SAACR,GACb,OACI,sBAAKC,UAAWC,IAAEO,QAAlB,UACI,6BAAKT,EAAMU,gBACX,4BAAIV,EAAMW,kB,eCFlBC,EAAW,SAACC,KAIVC,EAAc,SAACd,GACjB,OACI,cAAC,IAAD,CACIe,SAAUf,EAAMgB,cAChBJ,SAAUA,EACVK,OAAQ,gBAAEC,EAAF,EAAEA,aAAF,OACJ,uBAAMjB,UAAWC,IAAEiB,UAAWJ,SAAUG,EAAxC,UACI,cAAC,IAAD,CAAOX,KAAK,iBAAiBa,UAAU,WAAYC,KAAK,KACjDC,KAAK,OACZ,wBAAQC,KAAK,SAAb,2EA6CLC,EApCC,SAACxB,GAEb,IAAKA,EAAMyB,YACP,OAAO,cAAC,IAAD,CAAUpB,GAAG,WAIxB,IAAIqB,EAAgB1B,EAAM2B,aAAaC,MAAMC,KAAI,SAAAC,GAAE,OAAI,cAAE,EAAF,CAAcvB,KAAMuB,EAAGvB,KAAMD,UAAWwB,EAAGC,QAC9FC,EAAmBhC,EAAM2B,aAAaM,SAASJ,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAASnB,YAAamB,EAAGI,QAChBxB,cAAeoB,EAAGK,YAMxF,OACI,sBAAKlC,UAAWC,IAAEkC,QAAlB,UACI,sBAAKnC,UAAWC,IAAEmC,SAAlB,UACI,wFACCX,KAGL,sBAAKzB,UAAWC,IAAEoC,SAAlB,UACI,qBAAKrC,UAAWC,IAAEqC,aAAlB,SACKP,IAGL,cAAC,EAAD,CAAahB,cAjBL,SAACkB,GACjBlC,EAAMwC,WAAWN,EAAQO,0B,wBChBlBC,sBACXC,aAlBoB,SAACC,GACrB,MAAO,CACHjB,aAAciB,EAAMC,aACpBC,eAAgBF,EAAMC,aAAaC,eACnCrB,YAAamB,EAAMG,KAAKC,WAIL,SAACC,GACxB,MAAO,CACHT,WAAY,SAACN,GACTe,EAASC,YAAwBhB,SAQzCiB,IAFWT,CAGblB,I,mBC3BF4B,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,WAAa,4BAA4B,SAAW,0BAA0B,SAAW,0BAA0B,QAAU,yBAAyB,aAAe,8BAA8B,UAAY,6B,0ICG3SC,EAAgB,SAACV,GAAD,MAAU,CAC1BnB,YAAamB,EAAMG,KAAKC,SAIjBG,EAAuB,SAACI,GAAa,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAKzD,MAAMyB,YAIT,cAAC8B,EAAD,eAAeE,KAAKzD,QAHhB,cAAC,IAAD,CAAUK,GAAG,eAJW,GACXqD,aAUhC,OADiCf,YAAQW,EAARX,CAAyBa","file":"static/js/6.bcd6d0c5.chunk.js","sourcesContent":["import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst ContactItem = (props) => {\r\n    return (\r\n        <div className={s.contactItem}>\r\n            <div className={s.contactImg}></div>\r\n            <NavLink to={'/dialogs/' + props.contactId}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default ContactItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.massage}>\r\n            <h4>{props.messageAuthor}</h4>\r\n            <p>{props.messageText}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport ContactItem from \"./DialogItem/ContactItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, Form} from \"react-final-form\";\r\n\r\n\r\nlet validate = (e) => {\r\n}\r\n\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <Form\r\n            onSubmit={props.addNewMessage}\r\n            validate={validate}\r\n            render={({handleSubmit}) => (\r\n                <form className={s.sendField} onSubmit={handleSubmit}>\r\n                    <Field name=\"newMessageText\" component=\"textarea\"  cols=\"30\"\r\n                           rows=\"10\"/>\r\n                    <button type=\"submit\">Отправить</button>\r\n                </form>\r\n            )}\r\n        />\r\n    );\r\n\r\n}\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    if (!props.isAutorized) {\r\n        return <Redirect to='/login'/>;\r\n    }\r\n\r\n\r\n    let UsersElements = props.stateDialogs.Users.map(el => < ContactItem name={el.name} contactId={el.id}/>)\r\n    let MessagesElements = props.stateDialogs.Messages.map(el => <Message messageText={el.message}\r\n                                                                          messageAuthor={el.author}/>)\r\n    let addNewMessage = (message) => {\r\n        props.addMessage(message.newMessageText);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.contacts}>\r\n                <h2>Сообщения</h2>\r\n                {UsersElements}\r\n            </div>\r\n\r\n            <div className={s.massages}>\r\n                <div className={s.massageField}>\r\n                    {MessagesElements}\r\n                </div>\r\n\r\n                <MessageForm addNewMessage={addNewMessage}/>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {AddMessageActionCreator, UpdateTextMessageActionCreator} from \"../../redux/messagesReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthorizedRedirect} from \"../HOC/withAuthorizedRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        stateDialogs: state.messagesPage,\r\n        NewMessageText: state.messagesPage.NewMessageText,\r\n        isAutorized: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (message) => {\r\n            dispatch(AddMessageActionCreator(message))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthorizedRedirect\r\n)(Dialogs);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__wywwJ\",\"contactItem\":\"Dialogs_contactItem__1MEps\",\"contactImg\":\"Dialogs_contactImg__5m6No\",\"contacts\":\"Dialogs_contacts__328Hw\",\"massages\":\"Dialogs_massages__LEC0V\",\"massage\":\"Dialogs_massage__3_AbG\",\"massageField\":\"Dialogs_massageField__35a7m\",\"sendField\":\"Dialogs_sendField__JXzPe\"};","import * as React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps=(state)=>({\r\n    isAutorized: state.auth.isAuth\r\n});\r\n\r\n\r\nexport let withAuthorizedRedirect=(Component)=>{\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if (!this.props.isAutorized){\r\n                return <Redirect to='/login' />\r\n            }\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n    return ConnectedRedirectComponent;\r\n}\r\n\r\n"],"sourceRoot":""}