{"version":3,"sources":["../node_modules/react-final-form/dist/react-final-form.es.js","../node_modules/final-form/dist/final-form.es.js"],"names":["renderComponent","props","lazyProps","name","render","children","component","rest","_objectWithoutPropertiesLoose","React","Object","assign","undefined","Error","useWhenValueChanges","value","callback","isEqual","a","b","previous","React__default","useRef","useEffect","current","shallowEqual","keysA","keys","keysB","length","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","key","isSyntheticEvent","candidate","stopPropagation","ReactFinalFormContext","useLatest","ref","addLazyState","dest","state","forEach","defineProperty","get","enumerable","addLazyFormState","versions","version$1","all$1","formSubscriptionItems","reduce","result","ReactFinalForm","_ref","debug","decorators","destroyOnUnregister","alternateFormApi","form","initialValues","initialValuesEqual","keepDirtyOnReinitialize","mutators","onSubmit","_ref$subscription","subscription","validate","validateOnBlur","config","init","useConstant","f","createForm","pauseValidation","_React$useState","initialState","subscribe","setState","stateRef","isValidationPaused","resumeValidation","unsubscriptions","s","concat","map","decorator","reverse","unsubscribe","setConfig","renderProps","_extends","reset","eventOrValues","handleSubmit","event","preventDefault","submit","Provider","__versions","useForm","componentName","isReactNative","window","navigator","product","all","fieldSubscriptionItems","defaultFormat","defaultParse","defaultIsEqual","useField","_config","afterSubmit","allowNull","data","defaultValue","_config$format","format","formatOnBlur","initialValue","multiple","_config$parse","parse","_config$subscription","type","validateFields","_value","configRef","register","silent","registerField","beforeSubmit","_configRef$current","_configRef$current$fo","getFieldState","formatted","change","getValidator","firstRender","handlers","onBlur","blur","fieldState","onChange","target","currentValue","valueProp","nativeEvent","text","_detypedEvent$target","checked","Array","isArray","index","indexOf","slice","options","option","selected","push","getSelectedValues","getValue","onFocus","focus","meta","addLazyFieldMetaState","input","Field","field","keysCache","keysRegex","toPath","split","filter","Boolean","getIn","complexKey","path","i","isNaN","_toPropertyKey","arg","hint","prim","Symbol","toPrimitive","res","call","TypeError","String","Number","_toPrimitive","setInRecursor","destroyArrays","_extends2","_result2","_result","numKeys","numericKey","_result3","_array","array","splice","setIn","FORM_ERROR","ARRAY_ERROR","publishFieldState","formState","errors","lastSubmittedValues","submitErrors","submitFailed","submitSucceeded","submitting","values","active","modified","modifiedSinceLastSubmit","touched","validating","visited","error","submitError","initial","pristine","valid","dirty","dirtySinceLastSubmit","invalid","subscriptionFilter","src","shallowEqualKeys","different","filterFieldState","previousState","force","shallowEqualKeys$1","filterFormState","memoize","fn","lastArgs","lastResult","_len","arguments","args","_key","some","apply","isPromise","obj","then","version","tripleEquals","hasAnyError","notifySubscriber","subscriber","lastState","notification","notify","_ref2","entries","entry","notified","subscribers","fieldSubscribers","fields","resetWhileSubmitting","lastFormState","inBatch","validationPaused","validationBlocked","preventNotificationWhileValidationPaused","nextAsyncValidationKey","asyncValidationPromises","changeValue","mutate","after","renameField","from","to","_extends3","api","lastFieldState","getMutatorApi","mutatableState","returnValue","resetFieldState","runValidation","notifyFieldListeners","notifyFormListeners","mutatorsApi","getValidators","validators","validator","fieldChanged","safeFields","fieldKeys","limitedFieldLevelValidation","changedField","recordLevelErrors","fieldLevelErrors","promises","setErrors","errorsOrPromise","runRecordLevelValidation","setError","errorOrPromise","promise","runFieldLevelValidation","hasAsyncValidations","asyncValidationPromiseKey","Promise","processErrors","merged","forEachError","recordLevelError","errorFromParent","hasFieldLevelValidation","fieldLevelError","existing","copy","afterPromise","notifyField","fieldSubscriber","markAllFieldsTouched","calculateNextFormState","safeFieldKeys","foundDirty","dirtyFields","dirtyFieldsSinceLastSubmit","nonNullLastSubmittedValues","nextFormState","hasSubmitErrors","hasValidationErrors","convertToExternalFormState","_safeFieldKeys$reduce","notifying","scheduleNotification","batch","getRegisteredFields","getState","initialize","savedDirtyValues","preventNotification","fieldConfig","haveValidator","noValueInFormState","validatorRemoved","hasFieldSubscribers","lastOne","restart","asyncValidationPromisesKeys","console","resolvePromise","completeCalled","complete","resolve","memoized"],"mappings":"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","file":"static/js/0.c80cc782.chunk.js","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport * as React from 'react';\nimport React__default from 'react';\nimport { formSubscriptionItems, createForm, version as version$1, fieldSubscriptionItems } from 'final-form';\n\n// shared logic between components that use either render prop,\n// children render function, or component prop\nfunction renderComponent(props, lazyProps, name) {\n  var render = props.render,\n      children = props.children,\n      component = props.component,\n      rest = _objectWithoutPropertiesLoose(props, [\"render\", \"children\", \"component\"]);\n\n  if (component) {\n    return /*#__PURE__*/React.createElement(component, Object.assign(lazyProps, rest, {\n      children: children,\n      render: render\n    }));\n  }\n\n  if (render) {\n    return render(children === undefined ? Object.assign(lazyProps, rest) : // inject children back in\n    Object.assign(lazyProps, rest, {\n      children: children\n    }));\n  }\n\n  if (typeof children !== 'function') {\n    throw new Error(\"Must specify either a render prop, a render function as children, or a component prop to \" + name);\n  }\n\n  return children(Object.assign(lazyProps, rest));\n}\n\nfunction useWhenValueChanges(value, callback, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = function isEqual(a, b) {\n      return a === b;\n    };\n  }\n\n  var previous = React__default.useRef(value);\n  React__default.useEffect(function () {\n    if (!isEqual(value, previous.current)) {\n      callback();\n      previous.current = value;\n    }\n  });\n}\n\n/**\n * A simple hook to create a constant value that lives for\n * the lifetime of the component.\n *\n * Plagiarized from https://github.com/Andarist/use-constant\n *\n * Do NOT reuse this code unless you know what you're doing.\n * Use Andarist's hook; it's more fault tolerant to things like\n * falsy values.\n *\n * @param {Function} init - A function to generate the value\n */\n\nfunction useConstant(init) {\n  var ref = React__default.useRef();\n\n  if (!ref.current) {\n    ref.current = init();\n  }\n\n  return ref.current;\n}\n\nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || !a || typeof b !== 'object' || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar isSyntheticEvent = function isSyntheticEvent(candidate) {\n  return !!(candidate && typeof candidate.stopPropagation === 'function');\n};\n\nvar ReactFinalFormContext = /*#__PURE__*/React.createContext();\n\nfunction useLatest(value) {\n  var ref = React__default.useRef(value);\n  React__default.useEffect(function () {\n    ref.current = value;\n  });\n  return ref;\n}\n\nvar version = \"6.5.3\";\n\nvar addLazyState = function addLazyState(dest, state, keys) {\n  keys.forEach(function (key) {\n    Object.defineProperty(dest, key, {\n      get: function get() {\n        return state[key];\n      },\n      enumerable: true\n    });\n  });\n};\n\nvar addLazyFormState = function addLazyFormState(dest, state) {\n  return addLazyState(dest, state, ['active', 'dirty', 'dirtyFields', 'dirtySinceLastSubmit', 'dirtyFieldsSinceLastSubmit', 'error', 'errors', 'hasSubmitErrors', 'hasValidationErrors', 'initialValues', 'invalid', 'modified', 'modifiedSinceLastSubmit', 'pristine', 'submitError', 'submitErrors', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'validating', 'values', 'visited']);\n};\nvar addLazyFieldMetaState = function addLazyFieldMetaState(dest, state) {\n  return addLazyState(dest, state, ['active', 'data', 'dirty', 'dirtySinceLastSubmit', 'error', 'initial', 'invalid', 'length', 'modified', 'modifiedSinceLastSubmit', 'pristine', 'submitError', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'validating', 'visited']);\n};\n\nvar versions = {\n  'final-form': version$1,\n  'react-final-form': version\n};\nvar all$1 = formSubscriptionItems.reduce(function (result, key) {\n  result[key] = true;\n  return result;\n}, {});\n\nfunction ReactFinalForm(_ref) {\n  var debug = _ref.debug,\n      decorators = _ref.decorators,\n      destroyOnUnregister = _ref.destroyOnUnregister,\n      alternateFormApi = _ref.form,\n      initialValues = _ref.initialValues,\n      initialValuesEqual = _ref.initialValuesEqual,\n      keepDirtyOnReinitialize = _ref.keepDirtyOnReinitialize,\n      mutators = _ref.mutators,\n      onSubmit = _ref.onSubmit,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all$1 : _ref$subscription,\n      validate = _ref.validate,\n      validateOnBlur = _ref.validateOnBlur,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"debug\", \"decorators\", \"destroyOnUnregister\", \"form\", \"initialValues\", \"initialValuesEqual\", \"keepDirtyOnReinitialize\", \"mutators\", \"onSubmit\", \"subscription\", \"validate\", \"validateOnBlur\"]);\n\n  var config = {\n    debug: debug,\n    destroyOnUnregister: destroyOnUnregister,\n    initialValues: initialValues,\n    keepDirtyOnReinitialize: keepDirtyOnReinitialize,\n    mutators: mutators,\n    onSubmit: onSubmit,\n    validate: validate,\n    validateOnBlur: validateOnBlur\n  };\n  var form = useConstant(function () {\n    var f = alternateFormApi || createForm(config); // pause validation until children register all fields on first render (unpaused in useEffect() below)\n\n    f.pauseValidation();\n    return f;\n  }); // synchronously register and unregister to query form state for our subscription on first render\n\n  var _React$useState = React.useState(function () {\n    var initialState = {};\n    form.subscribe(function (state) {\n      initialState = state;\n    }, subscription)();\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1]; // save a copy of state that can break through the closure\n  // on the shallowEqual() line below.\n\n\n  var stateRef = useLatest(state);\n  React.useEffect(function () {\n    // We have rendered, so all fields are now registered, so we can unpause validation\n    form.isValidationPaused() && form.resumeValidation();\n    var unsubscriptions = [form.subscribe(function (s) {\n      if (!shallowEqual(s, stateRef.current)) {\n        setState(s);\n      }\n    }, subscription)].concat(decorators ? decorators.map(function (decorator) {\n      return (// this noop ternary is to appease the flow gods\n        // istanbul ignore next\n        decorator(form)\n      );\n    }) : []);\n    return function () {\n      form.pauseValidation(); // pause validation so we don't revalidate on every field deregistration\n\n      unsubscriptions.reverse().forEach(function (unsubscribe) {\n        return unsubscribe();\n      }); // don't need to resume validation here; either unmounting, or will re-run this hook with new deps\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [decorators]); // warn about decorator changes\n  // istanbul ignore next\n\n  if (process.env.NODE_ENV !== 'production') {\n    // You're never supposed to use hooks inside a conditional, but in this\n    // case we can be certain that you're not going to be changing your\n    // NODE_ENV between renders, so this is safe.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useWhenValueChanges(decorators, function () {\n      console.error('Form decorators should not change from one render to the next as new values will be ignored');\n    }, shallowEqual);\n  } // allow updatable config\n\n\n  useWhenValueChanges(debug, function () {\n    form.setConfig('debug', debug);\n  });\n  useWhenValueChanges(destroyOnUnregister, function () {\n    form.destroyOnUnregister = !!destroyOnUnregister;\n  });\n  useWhenValueChanges(keepDirtyOnReinitialize, function () {\n    form.setConfig('keepDirtyOnReinitialize', keepDirtyOnReinitialize);\n  });\n  useWhenValueChanges(initialValues, function () {\n    form.setConfig('initialValues', initialValues);\n  }, initialValuesEqual || shallowEqual);\n  useWhenValueChanges(mutators, function () {\n    form.setConfig('mutators', mutators);\n  });\n  useWhenValueChanges(onSubmit, function () {\n    form.setConfig('onSubmit', onSubmit);\n  });\n  useWhenValueChanges(validate, function () {\n    form.setConfig('validate', validate);\n  });\n  useWhenValueChanges(validateOnBlur, function () {\n    form.setConfig('validateOnBlur', validateOnBlur);\n  });\n\n  var handleSubmit = function handleSubmit(event) {\n    if (event) {\n      // sometimes not true, e.g. React Native\n      if (typeof event.preventDefault === 'function') {\n        event.preventDefault();\n      }\n\n      if (typeof event.stopPropagation === 'function') {\n        // prevent any outer forms from receiving the event too\n        event.stopPropagation();\n      }\n    }\n\n    return form.submit();\n  };\n\n  var renderProps = {\n    form: _extends({}, form, {\n      reset: function reset(eventOrValues) {\n        if (isSyntheticEvent(eventOrValues)) {\n          // it's a React SyntheticEvent, call reset with no arguments\n          form.reset();\n        } else {\n          form.reset(eventOrValues);\n        }\n      }\n    }),\n    handleSubmit: handleSubmit\n  };\n  addLazyFormState(renderProps, state);\n  return /*#__PURE__*/React.createElement(ReactFinalFormContext.Provider, {\n    value: form\n  }, renderComponent(_extends({}, rest, {\n    __versions: versions\n  }), renderProps, 'ReactFinalForm'));\n}\n\nfunction useForm(componentName) {\n  var form = React.useContext(ReactFinalFormContext);\n\n  if (!form) {\n    throw new Error((componentName || 'useForm') + \" must be used inside of a <Form> component\");\n  }\n\n  return form;\n}\n\nfunction useFormState(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      onChange = _ref.onChange,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all$1 : _ref$subscription;\n\n  var form = useForm('useFormState');\n  var firstRender = React.useRef(true);\n  var onChangeRef = React.useRef(onChange);\n  onChangeRef.current = onChange; // synchronously register and unregister to query field state for our subscription on first render\n\n  var _React$useState = React.useState(function () {\n    var initialState = {};\n    form.subscribe(function (state) {\n      initialState = state;\n    }, subscription)();\n\n    if (onChange) {\n      onChange(initialState);\n    }\n\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  React.useEffect(function () {\n    return form.subscribe(function (newState) {\n      if (firstRender.current) {\n        firstRender.current = false;\n      } else {\n        setState(newState);\n\n        if (onChangeRef.current) {\n          onChangeRef.current(newState);\n        }\n      }\n    }, subscription);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  var lazyState = {};\n  addLazyFormState(lazyState, state);\n  return lazyState;\n}\n\nfunction FormSpy(_ref) {\n  var onChange = _ref.onChange,\n      subscription = _ref.subscription,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"onChange\", \"subscription\"]);\n\n  var reactFinalForm = useForm('FormSpy');\n  var state = useFormState({\n    onChange: onChange,\n    subscription: subscription\n  });\n\n  if (onChange) {\n    return null;\n  }\n\n  var renderProps = {\n    form: _extends({}, reactFinalForm, {\n      reset: function reset(eventOrValues) {\n        if (isSyntheticEvent(eventOrValues)) {\n          // it's a React SyntheticEvent, call reset with no arguments\n          reactFinalForm.reset();\n        } else {\n          reactFinalForm.reset(eventOrValues);\n        }\n      }\n    })\n  };\n  return renderComponent(_extends({}, rest, renderProps), state, 'FormSpy');\n}\n\nvar isReactNative = typeof window !== 'undefined' && window.navigator && window.navigator.product && window.navigator.product === 'ReactNative';\n\nvar getSelectedValues = function getSelectedValues(options) {\n  var result = [];\n\n  if (options) {\n    for (var index = 0; index < options.length; index++) {\n      var option = options[index];\n\n      if (option.selected) {\n        result.push(option.value);\n      }\n    }\n  }\n\n  return result;\n};\n\nvar getValue = function getValue(event, currentValue, valueProp, isReactNative) {\n  if (!isReactNative && event.nativeEvent && event.nativeEvent.text !== undefined) {\n    return event.nativeEvent.text;\n  }\n\n  if (isReactNative && event.nativeEvent) {\n    return event.nativeEvent.text;\n  }\n\n  var detypedEvent = event;\n  var _detypedEvent$target = detypedEvent.target,\n      type = _detypedEvent$target.type,\n      value = _detypedEvent$target.value,\n      checked = _detypedEvent$target.checked;\n\n  switch (type) {\n    case 'checkbox':\n      if (valueProp !== undefined) {\n        // we are maintaining an array, not just a boolean\n        if (checked) {\n          // add value to current array value\n          return Array.isArray(currentValue) ? currentValue.concat(valueProp) : [valueProp];\n        } else {\n          // remove value from current array value\n          if (!Array.isArray(currentValue)) {\n            return currentValue;\n          }\n\n          var index = currentValue.indexOf(valueProp);\n\n          if (index < 0) {\n            return currentValue;\n          } else {\n            return currentValue.slice(0, index).concat(currentValue.slice(index + 1));\n          }\n        }\n      } else {\n        // it's just a boolean\n        return !!checked;\n      }\n\n    case 'select-multiple':\n      return getSelectedValues(event.target.options);\n\n    default:\n      return value;\n  }\n};\n\nvar all = fieldSubscriptionItems.reduce(function (result, key) {\n  result[key] = true;\n  return result;\n}, {});\n\nvar defaultFormat = function defaultFormat(value, name) {\n  return value === undefined ? '' : value;\n};\n\nvar defaultParse = function defaultParse(value, name) {\n  return value === '' ? undefined : value;\n};\n\nvar defaultIsEqual = function defaultIsEqual(a, b) {\n  return a === b;\n};\n\nfunction useField(name, config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  var _config = config,\n      afterSubmit = _config.afterSubmit,\n      allowNull = _config.allowNull,\n      component = _config.component,\n      data = _config.data,\n      defaultValue = _config.defaultValue,\n      _config$format = _config.format,\n      format = _config$format === void 0 ? defaultFormat : _config$format,\n      formatOnBlur = _config.formatOnBlur,\n      initialValue = _config.initialValue,\n      multiple = _config.multiple,\n      _config$parse = _config.parse,\n      parse = _config$parse === void 0 ? defaultParse : _config$parse,\n      _config$subscription = _config.subscription,\n      subscription = _config$subscription === void 0 ? all : _config$subscription,\n      type = _config.type,\n      validateFields = _config.validateFields,\n      _value = _config.value;\n  var form = useForm('useField');\n  var configRef = useLatest(config);\n\n  var register = function register(callback, silent) {\n    return (// avoid using `state` const in any closures created inside `register`\n      // because they would refer `state` from current execution context\n      // whereas actual `state` would defined in the subsequent `useField` hook\n      // execution\n      // (that would be caused by `setState` call performed in `register` callback)\n      form.registerField(name, callback, subscription, {\n        afterSubmit: afterSubmit,\n        beforeSubmit: function beforeSubmit() {\n          var _configRef$current = configRef.current,\n              beforeSubmit = _configRef$current.beforeSubmit,\n              formatOnBlur = _configRef$current.formatOnBlur,\n              _configRef$current$fo = _configRef$current.format,\n              format = _configRef$current$fo === void 0 ? defaultFormat : _configRef$current$fo;\n\n          if (formatOnBlur) {\n            var _ref = form.getFieldState(name),\n                value = _ref.value;\n\n            var formatted = format(value, name);\n\n            if (formatted !== value) {\n              form.change(name, formatted);\n            }\n          }\n\n          return beforeSubmit && beforeSubmit();\n        },\n        data: data,\n        defaultValue: defaultValue,\n        getValidator: function getValidator() {\n          return configRef.current.validate;\n        },\n        initialValue: initialValue,\n        isEqual: function isEqual(a, b) {\n          return (configRef.current.isEqual || defaultIsEqual)(a, b);\n        },\n        silent: silent,\n        validateFields: validateFields\n      })\n    );\n  };\n\n  var firstRender = React.useRef(true); // synchronously register and unregister to query field state for our subscription on first render\n\n  var _React$useState = React.useState(function () {\n    var initialState = {}; // temporarily disable destroyOnUnregister\n\n    var destroyOnUnregister = form.destroyOnUnregister;\n    form.destroyOnUnregister = false;\n    register(function (state) {\n      initialState = state;\n    }, true)(); // return destroyOnUnregister to its original value\n\n    form.destroyOnUnregister = destroyOnUnregister;\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  React.useEffect(function () {\n    return register(function (state) {\n      if (firstRender.current) {\n        firstRender.current = false;\n      } else {\n        setState(state);\n      }\n    }, false);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [name, data, defaultValue, // If we want to allow inline fat-arrow field-level validation functions, we\n  // cannot reregister field every time validate function !==.\n  // validate,\n  initialValue // The validateFields array is often passed as validateFields={[]}, creating\n  // a !== new array every time. If it needs to be changed, a rerender/reregister\n  // can be forced by changing the key prop\n  // validateFields\n  ]);\n  var handlers = {\n    onBlur: React.useCallback(function (event) {\n      state.blur();\n\n      if (formatOnBlur) {\n        /**\n         * Here we must fetch the value directly from Final Form because we cannot\n         * trust that our `state` closure has the most recent value. This is a problem\n         * if-and-only-if the library consumer has called `onChange()` immediately\n         * before calling `onBlur()`, but before the field has had a chance to receive\n         * the value update from Final Form.\n         */\n        var fieldState = form.getFieldState(state.name);\n        state.change(format(fieldState.value, state.name));\n      }\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [state.blur, state.name, format, formatOnBlur]),\n    onChange: React.useCallback(function (event) {\n      // istanbul ignore next\n      if (process.env.NODE_ENV !== 'production' && event && event.target) {\n        var targetType = event.target.type;\n        var unknown = ~['checkbox', 'radio', 'select-multiple'].indexOf(targetType) && !type && component !== 'select';\n\n        var _value2 = targetType === 'select-multiple' ? state.value : _value;\n\n        if (unknown) {\n          console.error(\"You must pass `type=\\\"\" + (targetType === 'select-multiple' ? 'select' : targetType) + \"\\\"` prop to your Field(\" + name + \") component.\\n\" + (\"Without it we don't know how to unpack your `value` prop - \" + (Array.isArray(_value2) ? \"[\" + _value2 + \"]\" : \"\\\"\" + _value2 + \"\\\"\") + \".\"));\n        }\n      }\n\n      var value = event && event.target ? getValue(event, state.value, _value, isReactNative) : event;\n      state.change(parse(value, name));\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [_value, name, parse, state.change, state.value, type]),\n    onFocus: React.useCallback(function (event) {\n      state.focus();\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [state.focus])\n  };\n  var meta = {};\n  addLazyFieldMetaState(meta, state);\n\n  var input = _extends({\n    name: name,\n\n    get value() {\n      var value = state.value;\n\n      if (formatOnBlur) {\n        if (component === 'input') {\n          value = defaultFormat(value);\n        }\n      } else {\n        value = format(value, name);\n      }\n\n      if (value === null && !allowNull) {\n        value = '';\n      }\n\n      if (type === 'checkbox' || type === 'radio') {\n        return _value;\n      } else if (component === 'select' && multiple) {\n        return value || [];\n      }\n\n      return value;\n    },\n\n    get checked() {\n      var value = state.value;\n\n      if (type === 'checkbox') {\n        value = format(value, name);\n\n        if (_value === undefined) {\n          return !!value;\n        } else {\n          return !!(Array.isArray(value) && ~value.indexOf(_value));\n        }\n      } else if (type === 'radio') {\n        return format(value, name) === _value;\n      }\n\n      return undefined;\n    }\n\n  }, handlers);\n\n  if (multiple) {\n    input.multiple = multiple;\n  }\n\n  if (type !== undefined) {\n    input.type = type;\n  }\n\n  var renderProps = {\n    input: input,\n    meta: meta\n  }; // assign to force Flow check\n\n  return renderProps;\n}\n\nvar Field = /*#__PURE__*/React.forwardRef(function Field(_ref, ref) {\n  var afterSubmit = _ref.afterSubmit,\n      allowNull = _ref.allowNull,\n      beforeSubmit = _ref.beforeSubmit,\n      children = _ref.children,\n      component = _ref.component,\n      data = _ref.data,\n      defaultValue = _ref.defaultValue,\n      format = _ref.format,\n      formatOnBlur = _ref.formatOnBlur,\n      initialValue = _ref.initialValue,\n      isEqual = _ref.isEqual,\n      multiple = _ref.multiple,\n      name = _ref.name,\n      parse = _ref.parse,\n      subscription = _ref.subscription,\n      type = _ref.type,\n      validate = _ref.validate,\n      validateFields = _ref.validateFields,\n      value = _ref.value,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"afterSubmit\", \"allowNull\", \"beforeSubmit\", \"children\", \"component\", \"data\", \"defaultValue\", \"format\", \"formatOnBlur\", \"initialValue\", \"isEqual\", \"multiple\", \"name\", \"parse\", \"subscription\", \"type\", \"validate\", \"validateFields\", \"value\"]);\n\n  var field = useField(name, {\n    afterSubmit: afterSubmit,\n    allowNull: allowNull,\n    beforeSubmit: beforeSubmit,\n    children: children,\n    component: component,\n    data: data,\n    defaultValue: defaultValue,\n    format: format,\n    formatOnBlur: formatOnBlur,\n    initialValue: initialValue,\n    isEqual: isEqual,\n    multiple: multiple,\n    parse: parse,\n    subscription: subscription,\n    type: type,\n    validate: validate,\n    validateFields: validateFields,\n    value: value\n  });\n\n  if (typeof children === 'function') {\n    return children(_extends({}, field, rest));\n  }\n\n  if (typeof component === 'string') {\n    // ignore meta, combine input with any other props\n    return /*#__PURE__*/React.createElement(component, _extends({}, field.input, {\n      children: children,\n      ref: ref\n    }, rest));\n  }\n\n  if (!name) {\n    throw new Error('prop name cannot be undefined in <Field> component');\n  }\n\n  return renderComponent(_extends({\n    children: children,\n    component: component,\n    ref: ref\n  }, rest), field, \"Field(\" + name + \")\");\n});\n\nfunction withTypes() {\n  return {\n    Form: ReactFinalForm,\n    FormSpy: FormSpy\n  };\n}\n\nexport { Field, ReactFinalForm as Form, FormSpy, useField, useForm, useFormState, version, withTypes };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n//      \nvar keysCache = {};\nvar keysRegex = /[.[\\]]+/;\n\nvar toPath = function toPath(key) {\n  if (key === null || key === undefined || !key.length) {\n    return [];\n  }\n\n  if (typeof key !== 'string') {\n    throw new Error('toPath() expects a string');\n  }\n\n  if (keysCache[key] == null) {\n    keysCache[key] = key.split(keysRegex).filter(Boolean);\n  }\n\n  return keysCache[key];\n};\n\n//      \n\nvar getIn = function getIn(state, complexKey) {\n  // Intentionally using iteration rather than recursion\n  var path = toPath(complexKey);\n  var current = state;\n\n  for (var i = 0; i < path.length; i++) {\n    var key = path[i];\n\n    if (current === undefined || current === null || typeof current !== 'object' || Array.isArray(current) && isNaN(key)) {\n      return undefined;\n    }\n\n    current = current[key];\n  }\n\n  return current;\n};\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nvar setInRecursor = function setInRecursor(current, index, path, value, destroyArrays) {\n  if (index >= path.length) {\n    // end of recursion\n    return value;\n  }\n\n  var key = path[index]; // determine type of key\n\n  if (isNaN(key)) {\n    var _extends2;\n\n    // object set\n    if (current === undefined || current === null) {\n      var _ref;\n\n      // recurse\n      var _result2 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // delete or create an object\n\n\n      return _result2 === undefined ? undefined : (_ref = {}, _ref[key] = _result2, _ref);\n    }\n\n    if (Array.isArray(current)) {\n      throw new Error('Cannot set a non-numeric property on an array');\n    } // current exists, so make a copy of all its values, and add/update the new one\n\n\n    var _result = setInRecursor(current[key], index + 1, path, value, destroyArrays);\n\n    if (_result === undefined) {\n      var numKeys = Object.keys(current).length;\n\n      if (current[key] === undefined && numKeys === 0) {\n        // object was already empty\n        return undefined;\n      }\n\n      if (current[key] !== undefined && numKeys <= 1) {\n        // only key we had was the one we are deleting\n        if (!isNaN(path[index - 1]) && !destroyArrays) {\n          // we are in an array, so return an empty object\n          return {};\n        } else {\n          return undefined;\n        }\n      }\n\n      var _removed = current[key],\n          _final = _objectWithoutPropertiesLoose(current, [key].map(_toPropertyKey));\n\n      return _final;\n    } // set result in key\n\n\n    return _extends({}, current, (_extends2 = {}, _extends2[key] = _result, _extends2));\n  } // array set\n\n\n  var numericKey = Number(key);\n\n  if (current === undefined || current === null) {\n    // recurse\n    var _result3 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // if nothing returned, delete it\n\n\n    if (_result3 === undefined) {\n      return undefined;\n    } // create an array\n\n\n    var _array = [];\n    _array[numericKey] = _result3;\n    return _array;\n  }\n\n  if (!Array.isArray(current)) {\n    throw new Error('Cannot set a numeric property on an object');\n  } // recurse\n\n\n  var existingValue = current[numericKey];\n  var result = setInRecursor(existingValue, index + 1, path, value, destroyArrays); // current exists, so make a copy of all its values, and add/update the new one\n\n  var array = [].concat(current);\n\n  if (destroyArrays && result === undefined) {\n    array.splice(numericKey, 1);\n\n    if (array.length === 0) {\n      return undefined;\n    }\n  } else {\n    array[numericKey] = result;\n  }\n\n  return array;\n};\n\nvar setIn = function setIn(state, key, value, destroyArrays) {\n  if (destroyArrays === void 0) {\n    destroyArrays = false;\n  }\n\n  if (state === undefined || state === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(state) + \" state\");\n  }\n\n  if (key === undefined || key === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(key) + \" key\");\n  } // Recursive function needs to accept and return State, but public API should\n  // only deal with Objects\n\n\n  return setInRecursor(state, 0, toPath(key), value, destroyArrays);\n};\n\nvar FORM_ERROR = 'FINAL_FORM/form-error';\nvar ARRAY_ERROR = 'FINAL_FORM/array-error';\n\n//      \n/**\n * Converts internal field state to published field state\n */\n\nfunction publishFieldState(formState, field) {\n  var errors = formState.errors,\n      initialValues = formState.initialValues,\n      lastSubmittedValues = formState.lastSubmittedValues,\n      submitErrors = formState.submitErrors,\n      submitFailed = formState.submitFailed,\n      submitSucceeded = formState.submitSucceeded,\n      submitting = formState.submitting,\n      values = formState.values;\n  var active = field.active,\n      blur = field.blur,\n      change = field.change,\n      data = field.data,\n      focus = field.focus,\n      modified = field.modified,\n      modifiedSinceLastSubmit = field.modifiedSinceLastSubmit,\n      name = field.name,\n      touched = field.touched,\n      validating = field.validating,\n      visited = field.visited;\n  var value = getIn(values, name);\n  var error = getIn(errors, name);\n\n  if (error && error[ARRAY_ERROR]) {\n    error = error[ARRAY_ERROR];\n  }\n\n  var submitError = submitErrors && getIn(submitErrors, name);\n  var initial = initialValues && getIn(initialValues, name);\n  var pristine = field.isEqual(initial, value);\n  var dirtySinceLastSubmit = !!(lastSubmittedValues && !field.isEqual(getIn(lastSubmittedValues, name), value));\n  var valid = !error && !submitError;\n  return {\n    active: active,\n    blur: blur,\n    change: change,\n    data: data,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    focus: focus,\n    initial: initial,\n    invalid: !valid,\n    length: Array.isArray(value) ? value.length : undefined,\n    modified: modified,\n    modifiedSinceLastSubmit: modifiedSinceLastSubmit,\n    name: name,\n    pristine: pristine,\n    submitError: submitError,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitting: submitting,\n    touched: touched,\n    valid: valid,\n    value: value,\n    visited: visited,\n    validating: validating\n  };\n}\n\n//      \nvar fieldSubscriptionItems = ['active', 'data', 'dirty', 'dirtySinceLastSubmit', 'error', 'initial', 'invalid', 'length', 'modified', 'modifiedSinceLastSubmit', 'pristine', 'submitError', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'value', 'visited', 'validating'];\n\n//      \nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || !a || typeof b !== 'object' || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n//      \nfunction subscriptionFilter (dest, src, previous, subscription, keys, shallowEqualKeys) {\n  var different = false;\n  keys.forEach(function (key) {\n    if (subscription[key]) {\n      dest[key] = src[key];\n\n      if (!previous || (~shallowEqualKeys.indexOf(key) ? !shallowEqual(src[key], previous[key]) : src[key] !== previous[key])) {\n        different = true;\n      }\n    }\n  });\n  return different;\n}\n\n//      \nvar shallowEqualKeys = ['data'];\n/**\n * Filters items in a FieldState based on a FieldSubscription\n */\n\nvar filterFieldState = function filterFieldState(state, previousState, subscription, force) {\n  var result = {\n    blur: state.blur,\n    change: state.change,\n    focus: state.focus,\n    name: state.name\n  };\n  var different = subscriptionFilter(result, state, previousState, subscription, fieldSubscriptionItems, shallowEqualKeys) || !previousState;\n  return different || force ? result : undefined;\n};\n\n//      \nvar formSubscriptionItems = ['active', 'dirty', 'dirtyFields', 'dirtyFieldsSinceLastSubmit', 'dirtySinceLastSubmit', 'error', 'errors', 'hasSubmitErrors', 'hasValidationErrors', 'initialValues', 'invalid', 'modified', 'modifiedSinceLastSubmit', 'pristine', 'submitting', 'submitError', 'submitErrors', 'submitFailed', 'submitSucceeded', 'touched', 'valid', 'validating', 'values', 'visited'];\n\n//      \nvar shallowEqualKeys$1 = ['touched', 'visited'];\n/**\n * Filters items in a FormState based on a FormSubscription\n */\n\nfunction filterFormState(state, previousState, subscription, force) {\n  var result = {};\n  var different = subscriptionFilter(result, state, previousState, subscription, formSubscriptionItems, shallowEqualKeys$1) || !previousState;\n  return different || force ? result : undefined;\n}\n\n//      \n\nvar memoize = function memoize(fn) {\n  var lastArgs;\n  var lastResult;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (!lastArgs || args.length !== lastArgs.length || args.some(function (arg, index) {\n      return !shallowEqual(lastArgs[index], arg);\n    })) {\n      lastArgs = args;\n      lastResult = fn.apply(void 0, args);\n    }\n\n    return lastResult;\n  };\n};\n\nvar isPromise = (function (obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n});\n\nvar version = \"4.20.2\";\n\nvar configOptions = ['debug', 'initialValues', 'keepDirtyOnReinitialize', 'mutators', 'onSubmit', 'validate', 'validateOnBlur'];\n\nvar tripleEquals = function tripleEquals(a, b) {\n  return a === b;\n};\n\nvar hasAnyError = function hasAnyError(errors) {\n  return Object.keys(errors).some(function (key) {\n    var value = errors[key];\n\n    if (value && typeof value === 'object' && !(value instanceof Error)) {\n      return hasAnyError(value);\n    }\n\n    return typeof value !== 'undefined';\n  });\n};\n\nfunction convertToExternalFormState(_ref) {\n  var active = _ref.active,\n      dirtySinceLastSubmit = _ref.dirtySinceLastSubmit,\n      modifiedSinceLastSubmit = _ref.modifiedSinceLastSubmit,\n      error = _ref.error,\n      errors = _ref.errors,\n      initialValues = _ref.initialValues,\n      pristine = _ref.pristine,\n      submitting = _ref.submitting,\n      submitFailed = _ref.submitFailed,\n      submitSucceeded = _ref.submitSucceeded,\n      submitError = _ref.submitError,\n      submitErrors = _ref.submitErrors,\n      valid = _ref.valid,\n      validating = _ref.validating,\n      values = _ref.values;\n  return {\n    active: active,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    modifiedSinceLastSubmit: modifiedSinceLastSubmit,\n    error: error,\n    errors: errors,\n    hasSubmitErrors: !!(submitError || submitErrors && hasAnyError(submitErrors)),\n    hasValidationErrors: !!(error || hasAnyError(errors)),\n    invalid: !valid,\n    initialValues: initialValues,\n    pristine: pristine,\n    submitting: submitting,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitError: submitError,\n    submitErrors: submitErrors,\n    valid: valid,\n    validating: validating > 0,\n    values: values\n  };\n}\n\nfunction notifySubscriber(subscriber, subscription, state, lastState, filter, force) {\n  var notification = filter(state, lastState, subscription, force);\n\n  if (notification) {\n    subscriber(notification);\n    return true;\n  }\n\n  return false;\n}\n\nfunction notify(_ref2, state, lastState, filter, force) {\n  var entries = _ref2.entries;\n  Object.keys(entries).forEach(function (key) {\n    var entry = entries[Number(key)]; // istanbul ignore next\n\n    if (entry) {\n      var subscription = entry.subscription,\n          subscriber = entry.subscriber,\n          notified = entry.notified;\n\n      if (notifySubscriber(subscriber, subscription, state, lastState, filter, force || !notified)) {\n        entry.notified = true;\n      }\n    }\n  });\n}\n\nfunction createForm(config) {\n  if (!config) {\n    throw new Error('No config specified');\n  }\n\n  var debug = config.debug,\n      destroyOnUnregister = config.destroyOnUnregister,\n      keepDirtyOnReinitialize = config.keepDirtyOnReinitialize,\n      initialValues = config.initialValues,\n      mutators = config.mutators,\n      onSubmit = config.onSubmit,\n      validate = config.validate,\n      validateOnBlur = config.validateOnBlur;\n\n  if (!onSubmit) {\n    throw new Error('No onSubmit function specified');\n  }\n\n  var state = {\n    subscribers: {\n      index: 0,\n      entries: {}\n    },\n    fieldSubscribers: {},\n    fields: {},\n    formState: {\n      dirtySinceLastSubmit: false,\n      modifiedSinceLastSubmit: false,\n      errors: {},\n      initialValues: initialValues && _extends({}, initialValues),\n      invalid: false,\n      pristine: true,\n      submitting: false,\n      submitFailed: false,\n      submitSucceeded: false,\n      resetWhileSubmitting: false,\n      valid: true,\n      validating: 0,\n      values: initialValues ? _extends({}, initialValues) : {}\n    },\n    lastFormState: undefined\n  };\n  var inBatch = 0;\n  var validationPaused = false;\n  var validationBlocked = false;\n  var preventNotificationWhileValidationPaused = false;\n  var nextAsyncValidationKey = 0;\n  var asyncValidationPromises = {};\n\n  var clearAsyncValidationPromise = function clearAsyncValidationPromise(key) {\n    return function (result) {\n      delete asyncValidationPromises[key];\n      return result;\n    };\n  };\n\n  var changeValue = function changeValue(state, name, mutate) {\n    var before = getIn(state.formState.values, name);\n    var after = mutate(before);\n    state.formState.values = setIn(state.formState.values, name, after) || {};\n  };\n\n  var renameField = function renameField(state, from, to) {\n    if (state.fields[from]) {\n      var _extends2, _extends3;\n\n      state.fields = _extends({}, state.fields, (_extends2 = {}, _extends2[to] = _extends({}, state.fields[from], {\n        name: to,\n        // rebind event handlers\n        blur: function blur() {\n          return api.blur(to);\n        },\n        change: function change(value) {\n          return api.change(to, value);\n        },\n        focus: function focus() {\n          return api.focus(to);\n        },\n        lastFieldState: undefined\n      }), _extends2));\n      delete state.fields[from];\n      state.fieldSubscribers = _extends({}, state.fieldSubscribers, (_extends3 = {}, _extends3[to] = state.fieldSubscribers[from], _extends3));\n      delete state.fieldSubscribers[from];\n      var value = getIn(state.formState.values, from);\n      state.formState.values = setIn(state.formState.values, from, undefined) || {};\n      state.formState.values = setIn(state.formState.values, to, value);\n      delete state.lastFormState;\n    }\n  }; // bind state to mutators\n\n\n  var getMutatorApi = function getMutatorApi(key) {\n    return function () {\n      // istanbul ignore next\n      if (mutators) {\n        // ^^ causes branch coverage warning, but needed to appease the Flow gods\n        var mutatableState = {\n          formState: state.formState,\n          fields: state.fields,\n          fieldSubscribers: state.fieldSubscribers,\n          lastFormState: state.lastFormState\n        };\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var returnValue = mutators[key](args, mutatableState, {\n          changeValue: changeValue,\n          getIn: getIn,\n          renameField: renameField,\n          resetFieldState: api.resetFieldState,\n          setIn: setIn,\n          shallowEqual: shallowEqual\n        });\n        state.formState = mutatableState.formState;\n        state.fields = mutatableState.fields;\n        state.fieldSubscribers = mutatableState.fieldSubscribers;\n        state.lastFormState = mutatableState.lastFormState;\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n        return returnValue;\n      }\n    };\n  };\n\n  var mutatorsApi = mutators ? Object.keys(mutators).reduce(function (result, key) {\n    result[key] = getMutatorApi(key);\n    return result;\n  }, {}) : {};\n\n  var runRecordLevelValidation = function runRecordLevelValidation(setErrors) {\n    var promises = [];\n\n    if (validate) {\n      var errorsOrPromise = validate(_extends({}, state.formState.values)); // clone to avoid writing\n\n      if (isPromise(errorsOrPromise)) {\n        promises.push(errorsOrPromise.then(setErrors));\n      } else {\n        setErrors(errorsOrPromise);\n      }\n    }\n\n    return promises;\n  };\n\n  var getValidators = function getValidators(field) {\n    return Object.keys(field.validators).reduce(function (result, index) {\n      var validator = field.validators[Number(index)]();\n\n      if (validator) {\n        result.push(validator);\n      }\n\n      return result;\n    }, []);\n  };\n\n  var runFieldLevelValidation = function runFieldLevelValidation(name, setError) {\n    var promises = [];\n    var validators = getValidators(state.fields[name]);\n\n    if (validators.length) {\n      var error;\n      validators.forEach(function (validator) {\n        var errorOrPromise = validator(getIn(state.formState.values, name), state.formState.values, validator.length === 0 || validator.length === 3 ? publishFieldState(state.formState, state.fields[name]) : undefined);\n\n        if (errorOrPromise && isPromise(errorOrPromise)) {\n          state.fields[name].validating = true;\n          var promise = errorOrPromise.then(function (error) {\n            state.fields[name].validating = false;\n            setError(error);\n          }); // errors must be resolved, not rejected\n\n          promises.push(promise);\n        } else if (!error) {\n          // first registered validator wins\n          error = errorOrPromise;\n        }\n      });\n      setError(error);\n    }\n\n    return promises;\n  };\n\n  var runValidation = function runValidation(fieldChanged, callback) {\n    if (validationPaused) {\n      validationBlocked = true;\n      callback();\n      return;\n    }\n\n    var fields = state.fields,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var fieldKeys = Object.keys(safeFields);\n\n    if (!validate && !fieldKeys.some(function (key) {\n      return getValidators(safeFields[key]).length;\n    })) {\n      callback();\n      return; // no validation rules\n    } // pare down field keys to actually validate\n\n\n    var limitedFieldLevelValidation = false;\n\n    if (fieldChanged) {\n      var changedField = safeFields[fieldChanged];\n\n      if (changedField) {\n        var validateFields = changedField.validateFields;\n\n        if (validateFields) {\n          limitedFieldLevelValidation = true;\n          fieldKeys = validateFields.length ? validateFields.concat(fieldChanged) : [fieldChanged];\n        }\n      }\n    }\n\n    var recordLevelErrors = {};\n    var fieldLevelErrors = {};\n    var promises = [].concat(runRecordLevelValidation(function (errors) {\n      recordLevelErrors = errors || {};\n    }), fieldKeys.reduce(function (result, name) {\n      return result.concat(runFieldLevelValidation(name, function (error) {\n        fieldLevelErrors[name] = error;\n      }));\n    }, []));\n    var hasAsyncValidations = promises.length > 0;\n    var asyncValidationPromiseKey = ++nextAsyncValidationKey;\n    var promise = Promise.all(promises).then(clearAsyncValidationPromise(asyncValidationPromiseKey)); // backwards-compat: add promise to submit-blocking promises iff there are any promises to await\n\n    if (hasAsyncValidations) {\n      asyncValidationPromises[asyncValidationPromiseKey] = promise;\n    }\n\n    var processErrors = function processErrors() {\n      var merged = _extends({}, limitedFieldLevelValidation ? formState.errors : {}, recordLevelErrors);\n\n      var forEachError = function forEachError(fn) {\n        fieldKeys.forEach(function (name) {\n          if (fields[name]) {\n            // make sure field is still registered\n            // field-level errors take precedent over record-level errors\n            var recordLevelError = getIn(recordLevelErrors, name);\n            var errorFromParent = getIn(merged, name);\n            var hasFieldLevelValidation = getValidators(safeFields[name]).length;\n            var fieldLevelError = fieldLevelErrors[name];\n            fn(name, hasFieldLevelValidation && fieldLevelError || validate && recordLevelError || (!recordLevelError && !limitedFieldLevelValidation ? errorFromParent : undefined));\n          }\n        });\n      };\n\n      forEachError(function (name, error) {\n        merged = setIn(merged, name, error) || {};\n      });\n      forEachError(function (name, error) {\n        if (error && error[ARRAY_ERROR]) {\n          var existing = getIn(merged, name);\n          var copy = [].concat(existing);\n          copy[ARRAY_ERROR] = error[ARRAY_ERROR];\n          merged = setIn(merged, name, copy);\n        }\n      });\n\n      if (!shallowEqual(formState.errors, merged)) {\n        formState.errors = merged;\n      }\n\n      formState.error = recordLevelErrors[FORM_ERROR];\n    }; // process sync errors\n\n\n    processErrors(); // sync errors have been set. notify listeners while we wait for others\n\n    callback();\n\n    if (hasAsyncValidations) {\n      state.formState.validating++;\n      callback();\n\n      var afterPromise = function afterPromise() {\n        state.formState.validating--;\n        callback();\n      };\n\n      promise.then(function () {\n        if (nextAsyncValidationKey > asyncValidationPromiseKey) {\n          // if this async validator has been superseded by another, ignore its results\n          return;\n        }\n\n        processErrors();\n      }).then(afterPromise, afterPromise);\n    }\n  };\n\n  var notifyFieldListeners = function notifyFieldListeners(name) {\n    if (inBatch) {\n      return;\n    }\n\n    var fields = state.fields,\n        fieldSubscribers = state.fieldSubscribers,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var notifyField = function notifyField(name) {\n      var field = safeFields[name];\n      var fieldState = publishFieldState(formState, field);\n      var lastFieldState = field.lastFieldState;\n      field.lastFieldState = fieldState;\n      var fieldSubscriber = fieldSubscribers[name];\n\n      if (fieldSubscriber) {\n        notify(fieldSubscriber, fieldState, lastFieldState, filterFieldState, lastFieldState === undefined);\n      }\n    };\n\n    if (name) {\n      notifyField(name);\n    } else {\n      Object.keys(safeFields).forEach(notifyField);\n    }\n  };\n\n  var markAllFieldsTouched = function markAllFieldsTouched() {\n    Object.keys(state.fields).forEach(function (key) {\n      state.fields[key].touched = true;\n    });\n  };\n\n  var hasSyncErrors = function hasSyncErrors() {\n    return !!(state.formState.error || hasAnyError(state.formState.errors));\n  };\n\n  var calculateNextFormState = function calculateNextFormState() {\n    var fields = state.fields,\n        formState = state.formState,\n        lastFormState = state.lastFormState;\n\n    var safeFields = _extends({}, fields);\n\n    var safeFieldKeys = Object.keys(safeFields); // calculate dirty/pristine\n\n    var foundDirty = false;\n    var dirtyFields = safeFieldKeys.reduce(function (result, key) {\n      var dirty = !safeFields[key].isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n      if (dirty) {\n        foundDirty = true;\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    var dirtyFieldsSinceLastSubmit = safeFieldKeys.reduce(function (result, key) {\n      // istanbul ignore next\n      var nonNullLastSubmittedValues = formState.lastSubmittedValues || {}; // || {} is for flow, but causes branch coverage complaint\n\n      if (!safeFields[key].isEqual(getIn(formState.values, key), getIn(nonNullLastSubmittedValues, key))) {\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    formState.pristine = !foundDirty;\n    formState.dirtySinceLastSubmit = !!(formState.lastSubmittedValues && Object.values(dirtyFieldsSinceLastSubmit).some(function (value) {\n      return value;\n    }));\n    formState.modifiedSinceLastSubmit = !!(formState.lastSubmittedValues && // Object.values would treat values as mixed (facebook/flow#2221)\n    Object.keys(safeFields).some(function (value) {\n      return safeFields[value].modifiedSinceLastSubmit;\n    }));\n    formState.valid = !formState.error && !formState.submitError && !hasAnyError(formState.errors) && !(formState.submitErrors && hasAnyError(formState.submitErrors));\n    var nextFormState = convertToExternalFormState(formState);\n\n    var _safeFieldKeys$reduce = safeFieldKeys.reduce(function (result, key) {\n      result.modified[key] = safeFields[key].modified;\n      result.touched[key] = safeFields[key].touched;\n      result.visited[key] = safeFields[key].visited;\n      return result;\n    }, {\n      modified: {},\n      touched: {},\n      visited: {}\n    }),\n        modified = _safeFieldKeys$reduce.modified,\n        touched = _safeFieldKeys$reduce.touched,\n        visited = _safeFieldKeys$reduce.visited;\n\n    nextFormState.dirtyFields = lastFormState && shallowEqual(lastFormState.dirtyFields, dirtyFields) ? lastFormState.dirtyFields : dirtyFields;\n    nextFormState.dirtyFieldsSinceLastSubmit = lastFormState && shallowEqual(lastFormState.dirtyFieldsSinceLastSubmit, dirtyFieldsSinceLastSubmit) ? lastFormState.dirtyFieldsSinceLastSubmit : dirtyFieldsSinceLastSubmit;\n    nextFormState.modified = lastFormState && shallowEqual(lastFormState.modified, modified) ? lastFormState.modified : modified;\n    nextFormState.touched = lastFormState && shallowEqual(lastFormState.touched, touched) ? lastFormState.touched : touched;\n    nextFormState.visited = lastFormState && shallowEqual(lastFormState.visited, visited) ? lastFormState.visited : visited;\n    return lastFormState && shallowEqual(lastFormState, nextFormState) ? lastFormState : nextFormState;\n  };\n\n  var callDebug = function callDebug() {\n    return debug && \"development\" !== 'production' && debug(calculateNextFormState(), Object.keys(state.fields).reduce(function (result, key) {\n      result[key] = state.fields[key];\n      return result;\n    }, {}));\n  };\n\n  var notifying = false;\n  var scheduleNotification = false;\n\n  var notifyFormListeners = function notifyFormListeners() {\n    if (notifying) {\n      scheduleNotification = true;\n    } else {\n      notifying = true;\n      callDebug();\n\n      if (!inBatch && !(validationPaused && preventNotificationWhileValidationPaused)) {\n        var lastFormState = state.lastFormState;\n        var nextFormState = calculateNextFormState();\n\n        if (nextFormState !== lastFormState) {\n          state.lastFormState = nextFormState;\n          notify(state.subscribers, nextFormState, lastFormState, filterFormState);\n        }\n      }\n\n      notifying = false;\n\n      if (scheduleNotification) {\n        scheduleNotification = false;\n        notifyFormListeners();\n      }\n    }\n  };\n\n  var beforeSubmit = function beforeSubmit() {\n    return Object.keys(state.fields).some(function (name) {\n      return state.fields[name].beforeSubmit && state.fields[name].beforeSubmit() === false;\n    });\n  };\n\n  var afterSubmit = function afterSubmit() {\n    return Object.keys(state.fields).forEach(function (name) {\n      return state.fields[name].afterSubmit && state.fields[name].afterSubmit();\n    });\n  };\n\n  var resetModifiedAfterSubmit = function resetModifiedAfterSubmit() {\n    return Object.keys(state.fields).forEach(function (key) {\n      return state.fields[key].modifiedSinceLastSubmit = false;\n    });\n  }; // generate initial errors\n\n\n  runValidation(undefined, function () {\n    notifyFormListeners();\n  });\n  var api = {\n    batch: function batch(fn) {\n      inBatch++;\n      fn();\n      inBatch--;\n      notifyFieldListeners();\n      notifyFormListeners();\n    },\n    blur: function blur(name) {\n      var fields = state.fields,\n          formState = state.formState;\n      var previous = fields[name];\n\n      if (previous) {\n        // can only blur registered fields\n        delete formState.active;\n        fields[name] = _extends({}, previous, {\n          active: false,\n          touched: true\n        });\n\n        if (validateOnBlur) {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        } else {\n          notifyFieldListeners();\n          notifyFormListeners();\n        }\n      }\n    },\n    change: function change(name, value) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      if (getIn(formState.values, name) !== value) {\n        changeValue(state, name, function () {\n          return value;\n        });\n        var previous = fields[name];\n\n        if (previous) {\n          // only track modified for registered fields\n          fields[name] = _extends({}, previous, {\n            modified: true,\n            modifiedSinceLastSubmit: !!formState.lastSubmittedValues\n          });\n        }\n\n        if (validateOnBlur) {\n          notifyFieldListeners();\n          notifyFormListeners();\n        } else {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        }\n      }\n    },\n\n    get destroyOnUnregister() {\n      return !!destroyOnUnregister;\n    },\n\n    set destroyOnUnregister(value) {\n      destroyOnUnregister = value;\n    },\n\n    focus: function focus(name) {\n      var field = state.fields[name];\n\n      if (field && !field.active) {\n        state.formState.active = name;\n        field.active = true;\n        field.visited = true;\n        notifyFieldListeners();\n        notifyFormListeners();\n      }\n    },\n    mutators: mutatorsApi,\n    getFieldState: function getFieldState(name) {\n      var field = state.fields[name];\n      return field && field.lastFieldState;\n    },\n    getRegisteredFields: function getRegisteredFields() {\n      return Object.keys(state.fields);\n    },\n    getState: function getState() {\n      return calculateNextFormState();\n    },\n    initialize: function initialize(data) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      var safeFields = _extends({}, fields);\n\n      var values = typeof data === 'function' ? data(formState.values) : data;\n\n      if (!keepDirtyOnReinitialize) {\n        formState.values = values;\n      }\n      /**\n       * Hello, inquisitive code reader! Thanks for taking the time to dig in!\n       *\n       * The following code is the way it is to allow for non-registered deep\n       * field values to be set via initialize()\n       */\n      // save dirty values\n\n\n      var savedDirtyValues = keepDirtyOnReinitialize ? Object.keys(safeFields).reduce(function (result, key) {\n        var field = safeFields[key];\n        var pristine = field.isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n        if (!pristine) {\n          result[key] = getIn(formState.values, key);\n        }\n\n        return result;\n      }, {}) : {}; // update initalValues and values\n\n      formState.initialValues = values;\n      formState.values = values; // restore the dirty values\n\n      Object.keys(savedDirtyValues).forEach(function (key) {\n        formState.values = setIn(formState.values, key, savedDirtyValues[key]);\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n    isValidationPaused: function isValidationPaused() {\n      return validationPaused;\n    },\n    pauseValidation: function pauseValidation(preventNotification) {\n      if (preventNotification === void 0) {\n        preventNotification = true;\n      }\n\n      validationPaused = true;\n      preventNotificationWhileValidationPaused = preventNotification;\n    },\n    registerField: function registerField(name, subscriber, subscription, fieldConfig) {\n      if (subscription === void 0) {\n        subscription = {};\n      }\n\n      if (!state.fieldSubscribers[name]) {\n        state.fieldSubscribers[name] = {\n          index: 0,\n          entries: {}\n        };\n      }\n\n      var index = state.fieldSubscribers[name].index++; // save field subscriber callback\n\n      state.fieldSubscribers[name].entries[index] = {\n        subscriber: memoize(subscriber),\n        subscription: subscription,\n        notified: false\n      };\n\n      if (!state.fields[name]) {\n        // create initial field state\n        state.fields[name] = {\n          active: false,\n          afterSubmit: fieldConfig && fieldConfig.afterSubmit,\n          beforeSubmit: fieldConfig && fieldConfig.beforeSubmit,\n          blur: function blur() {\n            return api.blur(name);\n          },\n          change: function change(value) {\n            return api.change(name, value);\n          },\n          data: fieldConfig && fieldConfig.data || {},\n          focus: function focus() {\n            return api.focus(name);\n          },\n          isEqual: fieldConfig && fieldConfig.isEqual || tripleEquals,\n          lastFieldState: undefined,\n          modified: false,\n          modifiedSinceLastSubmit: false,\n          name: name,\n          touched: false,\n          valid: true,\n          validateFields: fieldConfig && fieldConfig.validateFields,\n          validators: {},\n          validating: false,\n          visited: false\n        };\n      }\n\n      var haveValidator = false;\n      var silent = fieldConfig && fieldConfig.silent;\n\n      var notify = function notify() {\n        if (silent) {\n          notifyFieldListeners(name);\n        } else {\n          notifyFormListeners();\n          notifyFieldListeners();\n        }\n      };\n\n      if (fieldConfig) {\n        haveValidator = !!(fieldConfig.getValidator && fieldConfig.getValidator());\n\n        if (fieldConfig.getValidator) {\n          state.fields[name].validators[index] = fieldConfig.getValidator;\n        }\n\n        var noValueInFormState = getIn(state.formState.values, name) === undefined;\n\n        if (fieldConfig.initialValue !== undefined && noValueInFormState && (getIn(state.formState.values, name) === undefined || getIn(state.formState.values, name) === getIn(state.formState.initialValues, name)) // only initialize if we don't yet have any value for this field\n        ) {\n            state.formState.initialValues = setIn(state.formState.initialValues || {}, name, fieldConfig.initialValue);\n            state.formState.values = setIn(state.formState.values, name, fieldConfig.initialValue);\n            runValidation(undefined, notify);\n          } // only use defaultValue if we don't yet have any value for this field\n\n\n        if (fieldConfig.defaultValue !== undefined && fieldConfig.initialValue === undefined && getIn(state.formState.initialValues, name) === undefined && noValueInFormState) {\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.defaultValue);\n        }\n      }\n\n      if (haveValidator) {\n        runValidation(undefined, notify);\n      } else {\n        notify();\n      }\n\n      return function () {\n        var validatorRemoved = false; // istanbul ignore next\n\n        if (state.fields[name]) {\n          // state.fields[name] may have been removed by a mutator\n          validatorRemoved = !!(state.fields[name].validators[index] && state.fields[name].validators[index]());\n          delete state.fields[name].validators[index];\n        }\n\n        var hasFieldSubscribers = !!state.fieldSubscribers[name];\n\n        if (hasFieldSubscribers) {\n          // state.fieldSubscribers[name] may have been removed by a mutator\n          delete state.fieldSubscribers[name].entries[index];\n        }\n\n        var lastOne = hasFieldSubscribers && !Object.keys(state.fieldSubscribers[name].entries).length;\n\n        if (lastOne) {\n          delete state.fieldSubscribers[name];\n          delete state.fields[name];\n\n          if (validatorRemoved) {\n            state.formState.errors = setIn(state.formState.errors, name, undefined) || {};\n          }\n\n          if (destroyOnUnregister) {\n            state.formState.values = setIn(state.formState.values, name, undefined, true) || {};\n          }\n        }\n\n        if (!silent) {\n          if (validatorRemoved) {\n            runValidation(undefined, function () {\n              notifyFormListeners();\n              notifyFieldListeners();\n            });\n          } else if (lastOne) {\n            // values or errors may have changed\n            notifyFormListeners();\n          }\n        }\n      };\n    },\n    reset: function reset(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      if (state.formState.submitting) {\n        state.formState.resetWhileSubmitting = true;\n      }\n\n      state.formState.submitFailed = false;\n      state.formState.submitSucceeded = false;\n      delete state.formState.submitError;\n      delete state.formState.submitErrors;\n      delete state.formState.lastSubmittedValues;\n      api.initialize(initialValues || {});\n    },\n\n    /**\n     * Resets all field flags (e.g. touched, visited, etc.) to their initial state\n     */\n    resetFieldState: function resetFieldState(name) {\n      state.fields[name] = _extends({}, state.fields[name], {\n        active: false,\n        lastFieldState: undefined,\n        modified: false,\n        touched: false,\n        valid: true,\n        validating: false,\n        visited: false\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n\n    /**\n     * Returns the form to a clean slate; that is:\n     * - Clear all values\n     * - Resets all fields to their initial state\n     */\n    restart: function restart(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      api.batch(function () {\n        for (var name in state.fields) {\n          api.resetFieldState(name);\n          state.fields[name] = _extends({}, state.fields[name], {\n            active: false,\n            lastFieldState: undefined,\n            modified: false,\n            modifiedSinceLastSubmit: false,\n            touched: false,\n            valid: true,\n            validating: false,\n            visited: false\n          });\n        }\n\n        api.reset(initialValues);\n      });\n    },\n    resumeValidation: function resumeValidation() {\n      validationPaused = false;\n      preventNotificationWhileValidationPaused = false;\n\n      if (validationBlocked) {\n        // validation was attempted while it was paused, so run it now\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n      }\n\n      validationBlocked = false;\n    },\n    setConfig: function setConfig(name, value) {\n      switch (name) {\n        case 'debug':\n          debug = value;\n          break;\n\n        case 'destroyOnUnregister':\n          destroyOnUnregister = value;\n          break;\n\n        case 'initialValues':\n          api.initialize(value);\n          break;\n\n        case 'keepDirtyOnReinitialize':\n          keepDirtyOnReinitialize = value;\n          break;\n\n        case 'mutators':\n          mutators = value;\n\n          if (value) {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              if (!(key in value)) {\n                delete mutatorsApi[key];\n              }\n            });\n            Object.keys(value).forEach(function (key) {\n              mutatorsApi[key] = getMutatorApi(key);\n            });\n          } else {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              delete mutatorsApi[key];\n            });\n          }\n\n          break;\n\n        case 'onSubmit':\n          onSubmit = value;\n          break;\n\n        case 'validate':\n          validate = value;\n          runValidation(undefined, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n          break;\n\n        case 'validateOnBlur':\n          validateOnBlur = value;\n          break;\n\n        default:\n          throw new Error('Unrecognised option ' + name);\n      }\n    },\n    submit: function submit() {\n      var formState = state.formState;\n\n      if (formState.submitting) {\n        return;\n      }\n\n      delete formState.submitErrors;\n      delete formState.submitError;\n      formState.lastSubmittedValues = _extends({}, formState.values);\n\n      if (hasSyncErrors()) {\n        markAllFieldsTouched();\n        state.formState.submitFailed = true;\n        notifyFormListeners();\n        notifyFieldListeners();\n        return; // no submit for you!!\n      }\n\n      var asyncValidationPromisesKeys = Object.keys(asyncValidationPromises);\n\n      if (asyncValidationPromisesKeys.length) {\n        // still waiting on async validation to complete...\n        Promise.all(asyncValidationPromisesKeys.map(function (key) {\n          return asyncValidationPromises[Number(key)];\n        })).then(api.submit, console.error);\n        return;\n      }\n\n      var submitIsBlocked = beforeSubmit();\n\n      if (submitIsBlocked) {\n        return;\n      }\n\n      var resolvePromise;\n      var completeCalled = false;\n\n      var complete = function complete(errors) {\n        formState.submitting = false;\n        var resetWhileSubmitting = formState.resetWhileSubmitting;\n\n        if (resetWhileSubmitting) {\n          formState.resetWhileSubmitting = false;\n        }\n\n        if (errors && hasAnyError(errors)) {\n          formState.submitFailed = true;\n          formState.submitSucceeded = false;\n          formState.submitErrors = errors;\n          formState.submitError = errors[FORM_ERROR];\n          markAllFieldsTouched();\n        } else {\n          if (!resetWhileSubmitting) {\n            formState.submitFailed = false;\n            formState.submitSucceeded = true;\n          }\n\n          afterSubmit();\n        }\n\n        notifyFormListeners();\n        notifyFieldListeners();\n        completeCalled = true;\n\n        if (resolvePromise) {\n          resolvePromise(errors);\n        }\n\n        return errors;\n      };\n\n      formState.submitting = true;\n      formState.submitFailed = false;\n      formState.submitSucceeded = false;\n      formState.lastSubmittedValues = _extends({}, formState.values);\n      resetModifiedAfterSubmit(); // onSubmit is either sync, callback or async with a Promise\n\n      var result = onSubmit(formState.values, api, complete);\n\n      if (!completeCalled) {\n        if (result && isPromise(result)) {\n          // onSubmit is async with a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return result.then(complete, function (error) {\n            complete();\n            throw error;\n          });\n        } else if (onSubmit.length >= 3) {\n          // must be async, so we should return a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return new Promise(function (resolve) {\n            resolvePromise = resolve;\n          });\n        } else {\n          // onSubmit is sync\n          complete(result);\n        }\n      }\n    },\n    subscribe: function subscribe(subscriber, subscription) {\n      if (!subscriber) {\n        throw new Error('No callback given.');\n      }\n\n      if (!subscription) {\n        throw new Error('No subscription provided. What values do you want to listen to?');\n      }\n\n      var memoized = memoize(subscriber);\n      var subscribers = state.subscribers;\n      var index = subscribers.index++;\n      subscribers.entries[index] = {\n        subscriber: memoized,\n        subscription: subscription,\n        notified: false\n      };\n      var nextFormState = calculateNextFormState();\n      notifySubscriber(memoized, subscription, nextFormState, nextFormState, filterFormState, true);\n      return function () {\n        delete subscribers.entries[index];\n      };\n    }\n  };\n  return api;\n}\n\nexport { ARRAY_ERROR, FORM_ERROR, configOptions, createForm, fieldSubscriptionItems, formSubscriptionItems, getIn, setIn, version };\n"],"sourceRoot":""}